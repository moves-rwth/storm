# Dockerfile for Storm on Archlinux
###################################
# The Docker image can be built by executing:
# docker build -t yourusername/storm .
# A different base image can be set from the commandline with:
# --build-arg BASE_IMAGE=<new_base_image>

# Set base image
ARG BASE_IMAGE=archlinux:latest
FROM $BASE_IMAGE
LABEL org.opencontainers.image.authors="dev@stormchecker.org"


# Configuration arguments
#########################
# The arguments can be set from the commandline with:
# --build-arg <arg_name>=<value>

# CMake build type
ARG build_type=Release
# Specify number of threads to use for parallel compilation
ARG no_threads=1

# Specify Storm configuration (ON/OFF)
ARG disable_gurobi="OFF"
ARG disable_spot="OFF"
ARG disable_mathsat="OFF"
ARG disable_soplex="OFF"
ARG developer="OFF"
ARG cln_exact="OFF"
ARG cln_ratfunc="ON"
ARG all_sanitizers="OFF"

# Specify additional CMake arguments for Storm
ARG cmake_args=""

# Additional Archlinux packages
ARG packages=""


# Install dependencies
######################
RUN pacman -Syu --noconfirm  # Updates needed as Archlinux is rolling release
RUN pacman -S --noconfirm base-devel git cmake boost cln gmp ginac glpk hwloc z3 xerces-c eigen $packages


# Build Storm
#############
RUN mkdir /opt/storm
WORKDIR /opt/storm

# Copy the content of the current local Storm repository into the Docker image
COPY . .

# Switch to build directory
RUN mkdir -p /opt/storm/build
WORKDIR /opt/storm/build

# Configure Storm
RUN cmake -DCMAKE_BUILD_TYPE=$build_type \
             -DSTORM_PORTABLE=ON \
             -DSTORM_DISABLE_GUROBI=$disable_gurobi \
             -DSTORM_DISABLE_MATHSAT=$disable_mathsat \
             -DSTORM_DISABLE_SOPLEX=$disable_soplex \
             -DSTORM_DISABLE_SPOT=$disable_spot \
             -DSTORM_DEVELOPER=$developer \
             -DSTORM_USE_CLN_EA=$cln_exact \
             -DSTORM_USE_CLN_RF=$cln_ratfunc \
             $cmake_args ..

# Build external dependencies of Storm
RUN make resources -j $no_threads

# Build Storm binary
RUN make storm -j $no_threads

# Build additional binaries of Storm
# (This can be skipped or adapted depending on custom needs)
RUN make binaries -j $no_threads

WORKDIR /opt/storm
