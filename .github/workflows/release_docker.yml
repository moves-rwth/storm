name: Release Docker
# Builds Storm and deploys images to Dockerhub
# Build is distributed across multiple runners based on:
# https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners

on:
  # needed to trigger the workflow manually
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag (e.g. 1.1.0 or stable)'
        required: true
        default: 'x.y.z'

env:
  IMAGE: movesrwth/storm
  # GitHub runners currently have 4 cores
  NR_JOBS: "4"

jobs:
  build:
    name: Build ${{ matrix.image.tag }} on ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        image:
          - {tag: "${{ github.event.inputs.tag }}-debug",
             baseImg: "movesrwth/storm-dependencies:latest-debug",
             file: "Dockerfile",
             buildType: "Debug",
             developer: "ON"
            }
          - {tag: "${{ github.event.inputs.tag }}",
             baseImg: "movesrwth/storm-dependencies:latest",
             file: "Dockerfile",
             buildType: "Release",
             developer: "OFF"
            }
        platform:
          - {name: linux/amd64, runner: "ubuntu-latest"}
          - {name: linux/arm64, runner: "ubuntu-24.04-arm"}
    steps:
      - name: Git clone
        uses: actions/checkout@v4
      - name: Prepare
        # Sanitize platform name
        run: |
          platform=${{ matrix.platform.name }}
          echo "PLATFORM=${platform//\//-}" >> $GITHUB_ENV
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,${{ matrix.image.tag }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        # Only login if using original repo
        if: github.repository_owner == 'moves-rwth'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.STORM_CI_DOCKER_USERNAME }}
          password: ${{ secrets.STORM_CI_DOCKER_TOKEN }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.image.file }}
          # Set build arguments
          build-args: |
            BASE_IMAGE=${{ matrix.image.baseImg }}
            build_type=${{ matrix.image.buildType }}
            developer=${{ matrix.image.developer }}
            no_threads=${{ env.NR_JOBS }}
            # Omitting arguments cmake_args, gurobi_support, soplex_support, spot_support, cln_exact, cln_ratfunc, all_sanitizers
          platforms: ${{ matrix.platform.name }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests/${{ matrix.image.tag }}
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${{ matrix.image.tag }}/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.image.tag }}-digests-${{ env.PLATFORM }}
          path: ${{ runner.temp }}/digests/${{ matrix.image.tag }}/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge manifests for ${{ matrix.image.tag }}
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        image:
          # Must be the same as above
          - {tag: "${{ github.event.inputs.tag }}-debug"}
          - {tag: "${{ github.event.inputs.tag }}"}
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests/${{ matrix.image.tag }}
          pattern: ${{ matrix.image.tag }}-digests-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=raw,${{ matrix.image.tag }}
      - name: Login to Docker Hub
        # Only login if using original repo
        if: github.repository_owner == 'moves-rwth'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.STORM_CI_DOCKER_USERNAME }}
          password: ${{ secrets.STORM_CI_DOCKER_TOKEN }}
      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests/${{ matrix.image.tag }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< '${{ steps.meta.outputs.json}}') \
            $(printf '${{ env.IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE }}:${{ steps.meta.outputs.version }}
